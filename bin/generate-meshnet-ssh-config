#!/bin/bash

set -euo pipefail

# Check if nordvpn is installed
if ! command -v nordvpn &> /dev/null; then
    echo "Error: nordvpn command not found" >&2
    exit 1
fi

# Check if logged in to nordvpn
if ! nordvpn account &> /dev/null; then
    echo "Error: Not logged in to NordVPN" >&2
    exit 1
fi

# Create config.d directory if it doesn't exist
mkdir -p ~/.ssh/config.d

# Start generating the config
CONFIG_FILE=~/.ssh/config.d/meshnet-hosts
echo "# Auto-generated NordVPN Meshnet SSH hosts" > "$CONFIG_FILE"
echo "# Generated on $(date)" >> "$CONFIG_FILE"
echo "" >> "$CONFIG_FILE"

# Parse the meshnet peer list
echo "Generating SSH config for Meshnet peers..."

# First, add the current device
CURRENT_HOSTNAME=$(nordvpn meshnet peer list | grep -A5 "This device:" | grep "Hostname:" | awk '{print $2}')
CURRENT_IP=$(nordvpn meshnet peer list | grep -A5 "This device:" | grep "IP:" | awk '{print $2}')

if [[ -n "$CURRENT_HOSTNAME" && -n "$CURRENT_IP" ]]; then
    # Extract short name (everything before the first dot)
    SHORT_NAME=$(echo "$CURRENT_HOSTNAME" | cut -d'.' -f1 | sed 's/mikebannister-//')
    
    echo "# Current device" >> "$CONFIG_FILE"
    echo "Host $SHORT_NAME" >> "$CONFIG_FILE"
    echo "  HostName $CURRENT_IP" >> "$CONFIG_FILE"
    echo "" >> "$CONFIG_FILE"
    
    echo "Host $CURRENT_HOSTNAME" >> "$CONFIG_FILE"
    echo "  HostName $CURRENT_IP" >> "$CONFIG_FILE"
    echo "" >> "$CONFIG_FILE"
    
    echo "Added current device: $SHORT_NAME ($CURRENT_IP)"
fi

# Parse local peers
echo "# Local peers" >> "$CONFIG_FILE"

# Extract peer information in pairs (Hostname followed by IP)
nordvpn meshnet peer list | grep -A50 "Local Peers:" | grep -E "^(Hostname|IP):" | while read -r line; do
    if [[ "$line" =~ ^Hostname: ]]; then
        HOSTNAME=$(echo "$line" | awk '{print $2}')
        # Read the next line which should be the IP
        read -r ip_line
        if [[ "$ip_line" =~ ^IP: ]]; then
            IP=$(echo "$ip_line" | awk '{print $2}')
            
            # Extract short name (everything before the first dot, remove mikebannister- prefix)
            SHORT_NAME=$(echo "$HOSTNAME" | cut -d'.' -f1 | sed 's/mikebannister-//')
            
            # Write the config entries
            echo "Host $SHORT_NAME" >> "$CONFIG_FILE"
            echo "  HostName $IP" >> "$CONFIG_FILE"
            echo "" >> "$CONFIG_FILE"
            
            echo "Host $HOSTNAME" >> "$CONFIG_FILE"
            echo "  HostName $IP" >> "$CONFIG_FILE"
            echo "" >> "$CONFIG_FILE"
            
            echo "Added peer: $SHORT_NAME ($IP)"
        fi
    fi
done

echo ""
echo "# Remote hostname aliases (fetched via SSH)" >> "$CONFIG_FILE"
echo "# Note: Only includes hosts that were reachable" >> "$CONFIG_FILE"

# Second pass: Try to fetch actual hostnames from each peer
echo "Attempting to fetch remote hostnames..."

nordvpn meshnet peer list | grep -A50 "Local Peers:" | grep -E "^(Hostname|IP):" | while read -r line; do
    if [[ "$line" =~ ^Hostname: ]]; then
        HOSTNAME=$(echo "$line" | awk '{print $2}')
        # Read the next line which should be the IP
        read -r ip_line
        if [[ "$ip_line" =~ ^IP: ]]; then
            IP=$(echo "$ip_line" | awk '{print $2}')
            
            # Try to get the remote hostname via SSH
            echo -n "  Checking $HOSTNAME... "
            REMOTE_HOSTNAME=$(timeout 5 ssh -o StrictHostKeyChecking=no -o ConnectTimeout=3 -o BatchMode=yes "$IP" hostname 2>/dev/null)
            
            if [[ -n "$REMOTE_HOSTNAME" && "$REMOTE_HOSTNAME" != "$HOSTNAME" ]]; then
                echo "" >> "$CONFIG_FILE"
                echo "Host $REMOTE_HOSTNAME" >> "$CONFIG_FILE"
                echo "  HostName $IP" >> "$CONFIG_FILE"
                echo "" >> "$CONFIG_FILE"
                
                echo "found hostname: $REMOTE_HOSTNAME"
            else
                echo "unreachable or no hostname"
            fi
        fi
    fi
done

# Set proper permissions
chmod 600 "$CONFIG_FILE"

echo ""
echo "SSH config generated successfully at $CONFIG_FILE"