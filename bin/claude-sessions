#!/usr/bin/env bash
# claude-sessions - Display recent Claude Code sessions for the current project

# Get current working directory
CURRENT_DIR=$(pwd)

# Convert current directory to Claude project format (replace / with -)
PROJECT_DIR=$(echo "$CURRENT_DIR" | sed 's/\//-/g')

# Claude projects base directory
CLAUDE_BASE="$HOME/.claude/projects"
PROJECT_PATH="$CLAUDE_BASE/$PROJECT_DIR"

# Check if project directory exists
if [ ! -d "$PROJECT_PATH" ]; then
    echo "No Claude Code sessions found for current directory: $CURRENT_DIR"
    exit 1
fi

# Print header
printf "%-20s %-40s %s\n" "Timestamp" "Session ID" "Title"
printf "%-20s %-40s %s\n" "--------------------" "----------------------------------------" "-----"

# Get all session files sorted by modification time (newest first)
while IFS= read -r session_file; do
    if [ -f "$session_file" ]; then
        # Get session ID from filename
        SESSION_ID=$(basename "$session_file" .jsonl)
        
        # Get modification time
        TIMESTAMP=$(date -r "$session_file" "+%Y-%m-%d %H:%M:%S")
        
        # Extract first user message as title (look for type:user)
        USER_MSG=$(grep '"type":"user"' "$session_file" 2>/dev/null | head -1)
        if [ -n "$USER_MSG" ]; then
            # Try to extract content - handle both string and array formats
            TITLE=$(echo "$USER_MSG" | jq -r '.message.content // empty' 2>/dev/null)
            # If content is an array (structured message), get the text from first element
            if [[ "$TITLE" == "["* ]]; then
                TITLE=$(echo "$USER_MSG" | jq -r '.message.content[0].text // empty' 2>/dev/null)
            fi
        fi
        
        # If no user message found, try to get summary
        if [ -z "$TITLE" ]; then
            TITLE=$(grep '"type":"summary"' "$session_file" 2>/dev/null | head -1 | jq -r '.summary // empty' 2>/dev/null)
        fi
        
        # Clean up title - remove newlines and excessive whitespace
        TITLE=$(echo "$TITLE" | tr '\n' ' ' | sed 's/  */ /g' | sed 's/^ *//;s/ *$//')
        
        # Truncate title if too long
        if [ ${#TITLE} -gt 80 ]; then
            TITLE="${TITLE:0:77}..."
        fi
        
        # Default if no title found
        if [ -z "$TITLE" ]; then
            TITLE="(No title available)"
        fi
        
        # Print the session info
        printf "%-20s %-40s %s\n" "$TIMESTAMP" "$SESSION_ID" "$TITLE"
    fi
done < <(find "$PROJECT_PATH" -name "*.jsonl" -type f -exec ls -t {} + 2>/dev/null)