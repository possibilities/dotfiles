session-start() {
    # Check if git repository is dirty
    if ! git diff --quiet || ! git diff --cached --quiet; then
        echo "Error: Current git repository has uncommitted changes"
        return 1
    fi
    
    # Save the current session we're starting from
    local original_session=$(tmux display-message -p '#S')
    
    dir=$(worktree-create --no-cd) && project_name=$(basename "$dir" | sed "s/-worktree-[0-9]*$//") && session_name="$project_name-$(basename "$dir" | grep -o "worktree-[0-9]*")" && autocil --no-attach --name "$session_name" "$dir" && sleep 2 && tmux switch-client -t "$session_name" && tmux set-option -t "$session_name" @original_session "$original_session"
}

session-finish() {
    # Parse flags
    local keep_session=false
    if [[ "$1" == "--keep" ]]; then
        keep_session=true
        shift
    fi
    
    # Save current tmux session name
    local current_session=$(tmux display-message -p '#S')
    
    # Check if we're in a worktree before doing anything
    local in_worktree=false
    if [[ "$PWD" == */worktrees/*-worktree-* ]]; then
        in_worktree=true
    fi
    
    # Track status of operations
    local commit_status="‚ùå"
    local sync_status="‚ùå"
    
    if commit-creator; then
        commit_status="‚úÖ"
        if worktree-sync; then
            sync_status="‚úÖ"
            
            # Only switch and kill session if we were in a worktree and not keeping session
            if [ "$in_worktree" = true ]; then
                # Extract project and worktree info from session name
                local project_name=$(echo "$current_session" | sed 's/-worktree-[0-9]*$//')
                local worktree_name=$(echo "$current_session" | grep -o 'worktree-[0-9]*')
                
                if [ "$keep_session" = true ]; then
                    # Send notification that session was kept
                    notify-send -u critical -t 0 "Session Kept" "Project: $project_name\nWorktree: $worktree_name\nCommit: $commit_status Sync: $sync_status"
                else
                    # Check if we're still in the original worktree session
                    local current_active_session=$(tmux display-message -p '#S')
                    
                    if [ "$current_active_session" = "$current_session" ]; then
                        # We're still in the worktree session, need to switch before killing
                        # Try to get the original session we came from
                        local original_session=$(tmux show-option -t "$current_session" -v @original_session 2>/dev/null)
                        local target_session=""
                        
                        # Check if original session exists and is still active
                        if [ -n "$original_session" ] && tmux has-session -t "$original_session" 2>/dev/null; then
                            target_session="$original_session"
                        else
                            # Fall back to any other session
                            target_session=$(tmux list-sessions -F '#{session_name}' | grep -v "^${current_session}$" | head -1)
                        fi
                        
                        if [ -n "$target_session" ]; then
                            # Send notification before switching sessions
                            notify-send -u critical -t 0 "üèÅ Session Complete" "Project: $project_name\nWorktree: $worktree_name\nCommit: $commit_status Sync: $sync_status"
                            # Switch to the other session first
                            tmux switch-client -t "$target_session"
                            # Then kill the worktree session
                            tmux kill-session -t "$current_session"
                        else
                            echo "Error: No other tmux session to switch to"
                            return 1
                        fi
                    else
                        # We've already switched to a different session, just kill the worktree session
                        notify-send -u critical -t 0 "üèÅ Session Complete" "Project: $project_name\nWorktree: $worktree_name\nCommit: $commit_status Merge: $merge_status"
                        tmux kill-session -t "$current_session"
                    fi
                fi
            fi
        else
            # Merge failed - keep session open
            if [ "$in_worktree" = true ]; then
                local project_name=$(echo "$current_session" | sed 's/-worktree-[0-9]*$//')
                local worktree_name=$(echo "$current_session" | grep -o 'worktree-[0-9]*')
                notify-send -u critical -t 0 "Sync Failed - Session Kept" "Project: $project_name\nWorktree: $worktree_name\nCommit: $commit_status Sync: $sync_status\n\nResolve conflicts and try again"
            fi
            echo "Error: worktree-sync failed - session kept open"
            return 1
        fi
    else
        echo "Error: commit creator failed"
        # Still send notification if in worktree
        if [ "$in_worktree" = true ]; then
            local project_name=$(echo "$current_session" | sed 's/-worktree-[0-9]*$//')
            local worktree_name=$(echo "$current_session" | grep -o 'worktree-[0-9]*')
            notify-send -u critical -t 0 "Session Failed" "Project: $project_name\nWorktree: $worktree_name\nCommit: $commit_status Sync: $sync_status"
        fi
        return 1
    fi
}

session-close() {
    # Get the current session name
    local current_session=$(tmux display-message -p '#S')
    
    # Count the number of active sessions
    local session_count=$(tmux list-sessions | wc -l)
    
    if [ "$session_count" -eq 1 ]; then
        # Only one session, just kill it
        tmux kill-session -t "$current_session"
    else
        # Multiple sessions exist
        # Get the next session (excluding current one)
        local next_session=$(tmux list-sessions -F '#{session_name}' | grep -v "^${current_session}$" | head -1)
        
        if [ -n "$next_session" ]; then
            # Switch to the next session first
            tmux switch-client -t "$next_session"
            # Then kill the previous session
            tmux kill-session -t "$current_session"
        else
            # Fallback: just kill the current session
            tmux kill-session -t "$current_session"
        fi
    fi
}
