# Utils
alias vim='nvim'
alias mkdir='mkdir -p'
# note trailing space is needed to support watching aliased commands
alias watch='watch --color --no-title '
alias watchx='watch --color --no-title -x '
alias less='less -R '
alias zh='cat $HOME/.zsh_history'
alias woman='man'

# apps
alias g="git"
alias p="pnpm"
alias t="tmux"
alias a='autocil'
alias ta="tmux attach"
alias tnd="tmux_name_window_after_directory"
alias tn="tmux_name_window"
alias grh="grep_history"

alias misc="git add . ; git ci -am'Misc'"
alias miscpush="git add . ; git ci -am'Misc' ; git push"
alias mp="git add . ; git ci -am'Misc' ; git push"
alias wip="git add .; git commit --no-verify -a -m 'wip [skip ci]'"
alias wipush="git add .; git commit --no-verify -a -m 'wip [skip ci]' ; git push"

alias mr="lab mr create origin develop --assignee possibilities --remove-source-branch --squash"
alias pr="hub pull-request"

alias ls="ls --color=auto"

# vpn
alias vs='nordvpn status'
alias vu='nordvpn connect New_York && nordvpn set killswitch on'
alias vd='nordvpn disconnect'
alias vk='nordvpn set killswitch on'
alias vko='nordvpn set killswitch off'

alias copy='xclip -selection clipboard'
alias clip='xclip -selection clipboard'
alias clipboard='xclip -selection clipboard'

alias claude='claude-composer'
alias c='claude-composer'
alias claude-safe='claude'

source $HOME/.worktree-helpers

alias session-start='dir=$(worktree-create --no-cd) && project_name=$(basename "$dir" | sed "s/-worktree-[0-9]*$//") && session_name="$project_name-$(basename "$dir" | grep -o "worktree-[0-9]*")" && autocil --no-attach --name "$session_name" "$dir" && sleep 2 && tmux switch-client -t "$session_name"'

session-finish() {
    # Parse flags
    local keep_session=false
    if [[ "$1" == "--keep" ]]; then
        keep_session=true
        shift
    fi
    
    # Save current tmux session name
    local current_session=$(tmux display-message -p '#S')
    
    # Check if we're in a worktree before doing anything
    local in_worktree=false
    if [[ "$PWD" == */worktrees/*-worktree-* ]]; then
        in_worktree=true
    fi
    
    # Track status of operations
    local commit_status="❌"
    local merge_status="❌"
    
    # Run context-composer
    if commit-creator; then
        commit_status="✅"
        # Context-composer succeeded, try worktree-merge
        if worktree-merge; then
            merge_status="✅"
        fi
        
        # Only switch and kill session if we were in a worktree and not keeping session
        if [ "$in_worktree" = true ]; then
            # Extract project and worktree info from session name
            local project_name=$(echo "$current_session" | sed 's/-worktree-[0-9]*$//')
            local worktree_name=$(echo "$current_session" | grep -o 'worktree-[0-9]*')
            
            if [ "$keep_session" = true ]; then
                # Send notification that session was kept
                notify-send -u critical "Session Kept" "Project: $project_name\nWorktree: $worktree_name\nCommit: $commit_status  Merge: $merge_status"
            else
                # Get a different session to switch to (previous or any other)
                local target_session=$(tmux list-sessions -F '#{session_name}' | grep -v "^${current_session}$" | head -1)
                
                if [ -n "$target_session" ]; then
                    # Send notification before switching sessions
                    notify-send -u critical "Session Closed" "Project: $project_name\nWorktree: $worktree_name\nCommit: $commit_status  Merge: $merge_status"
                    # Switch to the other session first
                    tmux switch-client -t "$target_session"
                    # Then kill the worktree session
                    tmux kill-session -t "$current_session"
                else
                    echo "Error: No other tmux session to switch to"
                    return 1
                fi
            fi
        fi
    else
        echo "Error: context-composer failed"
        # Still send notification if in worktree
        if [ "$in_worktree" = true ]; then
            local project_name=$(echo "$current_session" | sed 's/-worktree-[0-9]*$//')
            local worktree_name=$(echo "$current_session" | grep -o 'worktree-[0-9]*')
            notify-send -u critical "Session Failed" "Project: $project_name\nWorktree: $worktree_name\nCommit: $commit_status  Merge: $merge_status"
        fi
        return 1
    fi
}

