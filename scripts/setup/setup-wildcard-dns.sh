#!/bin/bash

set -e

echo "Setting up wildcard DNS for local hostname"

# Get the current hostname
HOSTNAME=$(hostname)

echo "Detected hostname: $HOSTNAME"

# Check if NordVPN is managing resolv.conf
if grep -q "Generated by NordVPN" /etc/resolv.conf 2>/dev/null; then
    echo "Detected NordVPN DNS management, using NordVPN-compatible setup..."
    exec $0-nordvpn "$@"
fi

# Stop dnsmasq if it's running
sudo systemctl stop dnsmasq || true

# Backup existing dnsmasq configuration if it exists
if [ -f /etc/dnsmasq.conf ]; then
    sudo cp /etc/dnsmasq.conf /etc/dnsmasq.conf.backup
fi

# Create main dnsmasq configuration
sudo tee /etc/dnsmasq.conf > /dev/null <<EOF
# Main dnsmasq configuration for wildcard hostname resolution

# Listen on localhost only, standard DNS port
listen-address=127.0.0.1
bind-interfaces

# Wildcard resolution for hostname and all subdomains
address=/$HOSTNAME/127.0.0.1

# Forward all other queries to upstream DNS servers
# Read upstream servers from resolv-file
resolv-file=/etc/resolv.dnsmasq.conf

# Enable dnsmasq.d directory for additional configs
conf-dir=/etc/dnsmasq.d

# Cache size
cache-size=1000

# Log queries (can be commented out after testing)
#log-queries
EOF

# Create dnsmasq configuration directory
sudo mkdir -p /etc/dnsmasq.d

# Save current nameservers for dnsmasq to use as upstream
if [ -f /etc/resolv.conf ]; then
    grep "^nameserver" /etc/resolv.conf | sudo tee /etc/resolv.dnsmasq.conf > /dev/null
fi

# Enable and start dnsmasq service
sudo systemctl enable dnsmasq
sudo systemctl restart dnsmasq

# Wait a moment for service to stabilize
sleep 2

# Update /etc/resolv.conf to use local dnsmasq
# First check if it's managed by NordVPN or other service
if grep -q "Generated by" /etc/resolv.conf; then
    echo "Note: /etc/resolv.conf is managed by another service. Manual configuration may be needed."
    echo "To use wildcard DNS, add 'nameserver 127.0.0.1' as the first line in /etc/resolv.conf"
else
    # Backup current resolv.conf
    sudo cp /etc/resolv.conf /etc/resolv.conf.backup
    
    # Create new resolv.conf with local dnsmasq as primary
    echo "nameserver 127.0.0.1" | sudo tee /etc/resolv.conf > /dev/null
    grep "^nameserver" /etc/resolv.conf.backup | grep -v "127.0.0.1" | sudo tee -a /etc/resolv.conf > /dev/null
fi

# Test the configuration
echo -e "\nTesting DNS resolution..."

# Test using local dnsmasq directly
if dig @127.0.0.1 $HOSTNAME +short | grep -q "^127\."; then
    echo "✓ Base hostname resolves correctly via dnsmasq"
else
    echo "✗ Base hostname resolution failed via dnsmasq"
fi

if dig @127.0.0.1 test.$HOSTNAME +short | grep -q "127.0.0.1"; then
    echo "✓ Wildcard subdomain resolves correctly via dnsmasq"
else
    echo "✗ Wildcard subdomain resolution failed via dnsmasq"
fi

echo -e "\nWildcard DNS setup complete for hostname: $HOSTNAME"
echo "Note: If using NordVPN or similar, you may need to manually add 'nameserver 127.0.0.1' to /etc/resolv.conf"